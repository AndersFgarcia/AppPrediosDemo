// <auto-generated />
using System;
using AppPrediosDemo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppPrediosDemo.Migrations
{
    [DbContext(typeof(ViabilidadContext))]
    [Migration("20251020163509_TestConnection")]
    partial class TestConnection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppPrediosDemo.Models.ConceptosPrevio", b =>
                {
                    b.Property<int>("IdGestionJuridica")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("FechaInforme")
                        .HasColumnType("datetime");

                    b.Property<long>("IdRegistroProceso")
                        .HasColumnType("bigint");

                    b.Property<string>("InfomeJuridico")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdGestionJuridica")
                        .HasName("PK_IdGestionJuridica");

                    b.HasIndex("IdRegistroProceso");

                    b.ToTable("ConceptosPrevio", "AnalisisJuridico");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.EstudioTerreno", b =>
                {
                    b.Property<int>("IdEstudioTerreno")
                        .HasColumnType("int");

                    b.Property<string>("AcreditacionPropiedad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ApellidoPropietario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("AreaCalculada")
                        .HasColumnType("numeric(18, 4)");

                    b.Property<decimal>("AreaRegistral")
                        .HasColumnType("numeric(18, 4)");

                    b.Property<string>("CirculoRegistral")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdLocalizacion")
                        .HasColumnType("int");

                    b.Property<long>("IdRegistroProceso")
                        .HasColumnType("bigint");

                    b.Property<long?>("Identificacion")
                        .HasColumnType("bigint");

                    b.Property<string>("NaturalezaJuridica")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombrePropietario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoPersonaTitular")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdEstudioTerreno")
                        .HasName("PK_IdEstudioTerreno");

                    b.HasIndex(new[] { "ApellidoPropietario" }, "Idx_EstudioTerreno_ApellidoPropietario");

                    b.HasIndex(new[] { "IdLocalizacion" }, "Idx_EstudioTerreno_IdLocalizacion");

                    b.HasIndex(new[] { "IdRegistroProceso" }, "Idx_EstudioTerreno_IdRegistroProceso");

                    b.HasIndex(new[] { "Identificacion" }, "Idx_EstudioTerreno_Identificacion");

                    b.HasIndex(new[] { "NombrePropietario" }, "Idx_EstudioTerreno_NombrePropietario");

                    b.HasIndex(new[] { "TipoPersonaTitular" }, "Idx_EstudioTerreno_TipoPersonaTitular");

                    b.ToTable("EstudioTerreno", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.EtapaProcesal", b =>
                {
                    b.Property<int>("IdEtapaProcesal")
                        .HasColumnType("int");

                    b.Property<string>("NombreEtapaProcesal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEtapaProcesal")
                        .HasName("PK_IdEtapaProcesal");

                    b.ToTable("EtapaProcesal", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.FuenteProceso", b =>
                {
                    b.Property<int>("IdFuenteProceso")
                        .HasColumnType("int");

                    b.Property<string>("NombreFuenteProceso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdFuenteProceso")
                        .HasName("PK_IdFuenteProceso");

                    b.ToTable("FuenteProceso", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.Localizacion", b =>
                {
                    b.Property<int>("IdLocalizacion")
                        .HasColumnType("int");

                    b.Property<int>("CodigoCentroPoblado")
                        .HasColumnType("int");

                    b.Property<int>("CodigoDepartamento")
                        .HasColumnType("int");

                    b.Property<int>("CodigoMunicipio")
                        .HasColumnType("int");

                    b.Property<string>("NombreCentroPoblado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreDepartamento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreMunicipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdLocalizacion");

                    b.HasIndex(new[] { "CodigoCentroPoblado" }, "IDX_Localizacion_CodigoCentroPoblado");

                    b.HasIndex(new[] { "CodigoDepartamento" }, "IDX_Localizacion_CodigoDepartamento");

                    b.HasIndex(new[] { "CodigoMunicipio" }, "IDX_Localizacion_CodigoMunicipio");

                    b.ToTable("Localizacion", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.MedidaProcesal", b =>
                {
                    b.Property<int>("IdMedidasProcesal")
                        .HasColumnType("int");

                    b.Property<string>("Anotacion")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int>("IdEstudioTerreno")
                        .HasColumnType("int");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdMedidasProcesal")
                        .HasName("PK_IdMedidasProcesal");

                    b.HasIndex(new[] { "IdEstudioTerreno" }, "Idx_Postulacion_IdEstudioTerreno");

                    b.ToTable("MedidaProcesal", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.RegistroProceso", b =>
                {
                    b.Property<long>("IdRegistroProceso")
                        .HasColumnType("bigint");

                    b.Property<string>("Dependencia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("FMI")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdEtapaProcesal")
                        .HasColumnType("int");

                    b.Property<int>("IdFuenteProceso")
                        .HasColumnType("int");

                    b.Property<string>("IdPostulacion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<string>("NumeroExpediente")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RadicadoOrfeo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRegistroProceso")
                        .HasName("PK_IdRegistroProceso");

                    b.HasIndex(new[] { "IdRegistroProceso" }, "Idx_ConceptosPrevio_Postulacion_IdRegistroProceso");

                    b.HasIndex(new[] { "Dependencia" }, "Idx_RegistroProceso_Dependencia");

                    b.HasIndex(new[] { "FMI" }, "Idx_RegistroProceso_FMI");

                    b.HasIndex(new[] { "IdEtapaProcesal" }, "Idx_RegistroProceso_IdEtapaProcesal");

                    b.HasIndex(new[] { "IdFuenteProceso" }, "Idx_RegistroProceso_IdFuentePostulacionProceso");

                    b.HasIndex(new[] { "IdPostulacion" }, "Idx_RegistroProceso_IdPostulacion");

                    b.HasIndex(new[] { "IdTipoProceso" }, "Idx_RegistroProceso_IdTipoProceso");

                    b.HasIndex(new[] { "NumeroExpediente" }, "Idx_RegistroProceso_NumeroExpediente");

                    b.HasIndex(new[] { "RadicadoOrfeo" }, "Idx_RegistroProceso_RadicadoOrfeo");

                    b.ToTable("RegistroProceso", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.TipoDocumento", b =>
                {
                    b.Property<byte>("IdTipoDocumento")
                        .HasColumnType("tinyint");

                    b.Property<string>("NombreTipoDocumento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PrefijoTipoDocumento")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("IdTipoDocumento")
                        .HasName("PK_IdTipoDocumento");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.TipoProceso", b =>
                {
                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<string>("NombreTipoProceso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdTipoProceso")
                        .HasName("PK_IdTipoProceso");

                    b.ToTable("TipoProceso", "Postulacion");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("FechaFinVigencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicioVigencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Identificacion")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("LoginUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PasswordUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUsuario")
                        .HasName("PK_IdUsuario");

                    b.HasIndex(new[] { "Activo" }, "Idx_Usuarios_Activo");

                    b.HasIndex(new[] { "ApellidoUsuario" }, "Idx_Usuarios_ApellidoUsuario");

                    b.HasIndex(new[] { "FechaRegistro" }, "Idx_Usuarios_FechaRegistro");

                    b.HasIndex(new[] { "Identificacion" }, "Idx_Usuarios_Identificacion");

                    b.HasIndex(new[] { "LoginUsuario" }, "Idx_Usuarios_LoginUsuario");

                    b.HasIndex(new[] { "NombreUsuario" }, "Idx_Usuarios_NombreUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.ConceptosPrevio", b =>
                {
                    b.HasOne("AppPrediosDemo.Models.RegistroProceso", "IdRegistroProcesoNavigation")
                        .WithMany("ConceptosPrevios")
                        .HasForeignKey("IdRegistroProceso")
                        .IsRequired()
                        .HasConstraintName("FK_IdRegistroProceso_GestionJuridica");

                    b.Navigation("IdRegistroProcesoNavigation");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.EstudioTerreno", b =>
                {
                    b.HasOne("AppPrediosDemo.Models.Localizacion", "IdLocalizacionNavigation")
                        .WithMany("EstudioTerrenos")
                        .HasForeignKey("IdLocalizacion")
                        .IsRequired()
                        .HasConstraintName("FK_IdLocalizacion");

                    b.HasOne("AppPrediosDemo.Models.RegistroProceso", "IdRegistroProcesoNavigation")
                        .WithMany("EstudioTerrenos")
                        .HasForeignKey("IdRegistroProceso")
                        .IsRequired()
                        .HasConstraintName("FK_IdRegistroProceso");

                    b.Navigation("IdLocalizacionNavigation");

                    b.Navigation("IdRegistroProcesoNavigation");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.MedidaProcesal", b =>
                {
                    b.HasOne("AppPrediosDemo.Models.EstudioTerreno", "IdEstudioTerrenoNavigation")
                        .WithMany("MedidaProcesals")
                        .HasForeignKey("IdEstudioTerreno")
                        .IsRequired()
                        .HasConstraintName("FK_IdEstudioTerreno_Postulacion_EstudioTerreno");

                    b.Navigation("IdEstudioTerrenoNavigation");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.RegistroProceso", b =>
                {
                    b.HasOne("AppPrediosDemo.Models.EtapaProcesal", "IdEtapaProcesalNavigation")
                        .WithMany("RegistroProcesos")
                        .HasForeignKey("IdEtapaProcesal")
                        .IsRequired()
                        .HasConstraintName("FK_EtapaProcesal_IdEtapaProcesal");

                    b.HasOne("AppPrediosDemo.Models.FuenteProceso", "IdFuenteProcesoNavigation")
                        .WithMany("RegistroProcesos")
                        .HasForeignKey("IdFuenteProceso")
                        .IsRequired()
                        .HasConstraintName("FK_FuenteProceso_IdFuenteProceso");

                    b.HasOne("AppPrediosDemo.Models.TipoProceso", "IdTipoProcesoNavigation")
                        .WithMany("RegistroProcesos")
                        .HasForeignKey("IdTipoProceso")
                        .IsRequired()
                        .HasConstraintName("FK_TipoProceso_IdTipoProceso");

                    b.Navigation("IdEtapaProcesalNavigation");

                    b.Navigation("IdFuenteProcesoNavigation");

                    b.Navigation("IdTipoProcesoNavigation");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.EstudioTerreno", b =>
                {
                    b.Navigation("MedidaProcesals");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.EtapaProcesal", b =>
                {
                    b.Navigation("RegistroProcesos");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.FuenteProceso", b =>
                {
                    b.Navigation("RegistroProcesos");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.Localizacion", b =>
                {
                    b.Navigation("EstudioTerrenos");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.RegistroProceso", b =>
                {
                    b.Navigation("ConceptosPrevios");

                    b.Navigation("EstudioTerrenos");
                });

            modelBuilder.Entity("AppPrediosDemo.Models.TipoProceso", b =>
                {
                    b.Navigation("RegistroProcesos");
                });
#pragma warning restore 612, 618
        }
    }
}
